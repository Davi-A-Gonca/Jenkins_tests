pipeline {
  agent { 
    label 'docker-agent-test' 
  }

  stages {
    // Checka se repositório existe
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    // Verifica a estrutura de pastas
    stage('Verify Workspace Structure') {
      steps {
        echo "=== Conteúdo do workspace (raiz) ==="
        sh 'ls -R .'
      }
    }

    // Lista de arquivos de teste Java
    stage('Listar Arquivos de Teste') {
      steps {
        dir('Testes') {
          echo "=== Arquivos em Testes/src/test/java ==="
          sh 'find src/test/java -type f -name "*Test.java"'
        }
      }
    }

    // Build e execução de todos os testes, incluindo tudo que termine em *Test.java
    stage('Build & Run All Tests') {
      steps {
        dir('Testes') {
          echo "Executando mvn clean test com inclusão explícita de *Test.java"
          // -Dsurefire.includes=**/*Test.java força o Surefire a rodar todas as classes terminadas em Test.java
          sh 'mvn clean test -Dsurefire.includes="**/*Test.java"'
        }
      }
    }
  }

  post {
    always {
      echo "===== Fim da execução de mvn clean test ====="
    }
    failure {
      echo "Algum teste falhou. Verifique o console para detalhes."
    }
    success {
      echo "Todos os testes passaram com sucesso."
    }
  }
}
